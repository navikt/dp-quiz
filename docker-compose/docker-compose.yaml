version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: wurstmeister/kafka:latest
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_LISTENERS: kafka://:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: kafka:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: kafka
      KAFKA_CREATE_TOPICS: "teamdagpenger.rapid.v1:1:1,teamdagpenger.journalforing.v1:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

  postgres:
    container_name: postgres
    hostname: postgres
    image: "postgres:12.8"
    volumes:
      - "./db-initscripts:/docker-entrypoint-initdb.d"
    ports:
      - "5432:5432"
    env_file: .env
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DATABASES: "${DB_NAME_QUIZ}, ${DB_NAME_SOKNAD}"

  quiz:
    image: ghcr.io/navikt/dp-quiz/dp-quiz-mediator:latest
    container_name: quiz
    depends_on:
      - kafka
      - postgres
    ports:
      - "8082:8080"
    env_file: .env
    environment:
      DB_DATABASE: ${DB_NAME_QUIZ}
      DB_USERNAME: "${DB_NAME_QUIZ}-user"

  soknad:
    image: ghcr.io/navikt/dp-soknad/dp-soknad:latest
    container_name: soknad
    depends_on:
      - kafka
      - postgres
      - oauth
    ports:
      - "8081:8080"
    env_file: .env
    environment:
      DB_DATABASE: ${DB_NAME_SOKNAD}
      DB_USERNAME: "${DB_NAME_SOKNAD}-user"
      NAIS_CLUSTER_NAME: "dev-gcp"
      KAFKA_RESET_POLICY: "earliest"

  oauth:
    image: ghcr.io/navikt/mock-oauth2-server:0.5.1
    container_name: oauth
    ports:
      - 8080:8080
    hostname: host.docker.internal
